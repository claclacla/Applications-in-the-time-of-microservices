version: '3'

networks:
  rabbitmq_network:
    driver: bridge
  mongodb_network:
    driver: bridge  

services:

  # Servers

  rabbitmq:
    image: rabbitmq:3.7.4
    container_name: RabbitMQ
    networks:
      - rabbitmq_network
    ports:
      - "5672:5672"

  mongodb:
    image: mongo:3.4
    container_name: MongoDB
    networks:
      - mongodb_network

  # Api gateway

  api-gateway:
    build: ./api-gateway
    image: claclacla/api-gateway
    container_name: ApiGateway
    environment:
      - APP_ENV=development
    networks:
      - rabbitmq_network
    ports:
      - 3000:3000
    volumes:
      - "${APP_FOLDER}:/usr/src/app"
    links:
      - rabbitmq
    tty: true
    stdin_open: true

  # Order

  order-insert:
    build: ./ruby-microservice
    image: claclacla/ruby-microservice
    container_name: OrderInsert
    environment:
      - MICROSERVICE_PATH=/usr/src/app/microservices/order/insert/app.rb  
      - APP_ENV=development
    networks:
      - rabbitmq_network
      - mongodb_network
    volumes:
      - "${APP_FOLDER}:/usr/src/app"
    links:
      - rabbitmq
      - mongodb
    tty: true
    stdin_open: true

  order-get:
    build: ./ruby-microservice
    image: claclacla/ruby-microservice
    container_name: OrderGet
    environment:
      - MICROSERVICE_PATH=/usr/src/app/microservices/order/get/app.rb  
      - APP_ENV=development
    networks:
      - rabbitmq_network
      - mongodb_network
    volumes:
      - "${APP_FOLDER}:/usr/src/app"
    links:
      - rabbitmq
      - mongodb
    tty: true
    stdin_open: true

  order-patch:
    build: ./ruby-microservice
    image: claclacla/ruby-microservice
    container_name: OrderPatch
    environment:
      - MICROSERVICE_PATH=/usr/src/app/microservices/order/patch/app.rb  
      - APP_ENV=development
    networks:
      - rabbitmq_network
      - mongodb_network
    volumes:
      - "${APP_FOLDER}:/usr/src/app"
    links:
      - rabbitmq
      - mongodb
    tty: true
    stdin_open: true

  order-notifications-dispatcher:
    build: ./ruby-microservice
    image: claclacla/ruby-microservice
    container_name: OrderNotificationsDispatcher
    environment:
      - MICROSERVICE_PATH=/usr/src/app/microservices/order/notifications-dispatcher/app.rb  
      - APP_ENV=development
    networks:
      - rabbitmq_network
    volumes:
      - "${APP_FOLDER}:/usr/src/app"
    links:
      - rabbitmq
    tty: true
    stdin_open: true

  # Orders

  orders-get:
    build: ./ruby-microservice
    image: claclacla/ruby-microservice
    container_name: OrdersGet
    environment:
      - MICROSERVICE_PATH=/usr/src/app/microservices/orders/get/app.rb  
      - APP_ENV=development
    networks:
      - rabbitmq_network
      - mongodb_network
    volumes:
      - "${APP_FOLDER}:/usr/src/app"
    links:
      - rabbitmq
      - mongodb
    tty: true
    stdin_open: true

  # Dispatcher

  dispatcher-manager:
    build: ./ruby-microservice-api
    image: claclacla/ruby-microservice-api
    container_name: DispatcherManager
    environment:
      - MICROSERVICE_PATH=/usr/src/app/microservices/dispatcher/manager/app.rb
      - APP_ENV=development
    networks:
      - rabbitmq_network
    volumes:
      - "${APP_FOLDER}:/usr/src/app"
    links:
      - rabbitmq
    tty: true
    stdin_open: true

  # Client

  client-application:
    build: ./client-application
    image: claclacla/spa-http-server
    container_name: ClientApplication
    ports:
      - 8080:8080
    volumes:
      - "${APP_FOLDER}/docker/dev/client-application/public:/usr/src/app"

  client-order-socket:
    build: ./js-microservice
    image: claclacla/js-microservice
    container_name: ClientOrderSocket
    environment:
      - MICROSERVICE_PATH=/usr/src/app/microservices/order/client-socket/app.js
      - APP_ENV=development
    networks:
      - rabbitmq_network
    ports:
      - 3001:3001
    volumes:
      - "${APP_FOLDER}:/usr/src/app"
    links:
      - rabbitmq
    tty: true
    stdin_open: true

  # Vendor

  vendor-application:
    build: ./vendor-application
    image: claclacla/spa-http-server
    container_name: VendorApplication
    ports:
      - 8081:8080
    volumes:
      - "${APP_FOLDER}/docker/dev/vendor-application/public:/usr/src/app"

  vendor-order-socket:
    build: ./js-microservice
    image: claclacla/js-microservice
    container_name: VendorOrderSocket
    environment:
      - MICROSERVICE_PATH=/usr/src/app/microservices/order/vendor-socket/app.js
      - APP_ENV=development
    networks:
      - rabbitmq_network
    ports:
      - 3002:3002
    volumes:
      - "${APP_FOLDER}:/usr/src/app"
    links:
      - rabbitmq
    tty: true
    stdin_open: true